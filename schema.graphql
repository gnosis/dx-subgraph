type Auction @entity {
  id: ID! #identified by sellToken - buyToken + auctionIndex [String]
  sellToken: Bytes!
  buyToken: Bytes!
  sellVolume: BigInt!
  buyVolume: BigInt!
  auctionIndex: BigInt!
  priceNum: BigInt!
  priceDen: BigInt!
  cleared: Boolean!
  startTime: BigInt!
  clearingTime: BigInt!
  tokenPair: TokenPair!
  traders: [Trader!]
  sellOrders: [SellOrder!] @derivedFrom(field: "auction")
  buyOrders: [BuyOrder!] @derivedFrom(field: "auction")
}

type Trader @entity {
  id: ID! # Address
  sellOrders: [SellOrder!] @derivedFrom(field: "trader")
  buyOrders: [BuyOrder!] @derivedFrom(field: "trader")
  tokenPairsParticipated: [TokenPair!] 
  tokensParticipated: [Token!] @derivedFrom(field: "traders")
  tokenBalances: [TokenBalance!] @derivedFrom(field: "trader")
  firstParticipation: BigInt
  lastActive: BigInt
}

type SellOrder @entity {
  id: ID! # can be transaction hash + SellToken [String]
  auction: Auction!
  tokenPair: TokenPair!
  trader: Trader!
  amount: BigInt!
  fee: BigInt! 
  timestamp: BigInt!
  transactionHash: Bytes!
}

type BuyOrder @entity {
  id: ID! # transaction hash + BuyToken [String]
  auction: Auction!
  tokenPair: TokenPair!
  trader: Trader!
  amount: BigInt!
  fee: BigInt
  timestamp: BigInt!
  transactionHash: Bytes!
}

type TokenPair @entity {
  id: ID! # identified by the sell address + buy address [Sring]
  sellToken: Bytes!
  buyToken: Bytes!
  totalSellVolume: BigInt!
  totalBuyVolume: BigInt!
  listingTime: BigInt!
  latestStartTime: BigInt!
  latestClearTime: BigInt
  auctions: [Auction!]
  traders: [Trader!]
  currentAuctionIndex: Int 
  listingTransactionHash: Bytes
}

type Token @entity {
  id: ID! #Token Address 
  sellOrders: [SellOrder!]!
  buyOrders: [BuyOrder!]!
  traders: [Trader!]!
  tokenBalances: [TokenBalance!]! @derivedFrom(field: "token")
  tokenPairs: [TokenPair!]! 
  whitelisted: Boolean!
}

type TokenBalance @entity {
  id: ID! # identified by Trader + Token [String]
  trader: Trader!
  token: Token!
  totalDeposited: BigInt!
  totalWithdrawn: BigInt!
  balance: BigInt!
  tokenAuctionBalance: [TokenAuctionBalance!]
}

type TokenAuctionBalance @entity {
  id: ID! # Identified by Trader + Auction [String]
  trader: Trader
  auction: Auction
  sellTokenBalance: BigInt
  buyTokenBalance: BigInt
}
